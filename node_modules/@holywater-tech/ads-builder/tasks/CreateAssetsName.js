const fs = require('fs');
const path = require('path');

const nameProject = path.join(__dirname, '../..');
const assetsFolder = path.join(nameProject, 'assets');
const sheetsFolder = path.join(assetsFolder, 'sheets');
const texturesFolder = path.join(assetsFolder, 'textures');
const srcFolder = path.join(nameProject, 'src');

const filterAssetName = (title) =>
    title
        .replaceAll(/\?|\+|\.|%|:|\*|@|\+|!|"|;|\(|\)|=/g, '')
        .replaceAll(/-|\s/g, '_')
        .toLowerCase();

const createForTexture = () => {
    const files = fs.readdirSync(texturesFolder, 'utf-8');
    let result = 'export const TEXTURES = {\n';
    for (let i = 0; i < files.length; i += 1) {
        const name = filterAssetName(files[i].slice(0, -4));
        result += `    ${name.toUpperCase()}: '${name}',\n`;
    }
    result += '};';

    return result;
};

const createForSheets = () => {
    const files = fs.readdirSync(sheetsFolder, 'utf-8');
    let result = 'export const SHEETS = {\n';
    for (let i = 0; i < files.length; i += 1) {
        const name = filterAssetName(files[i].slice(0, -4));
        result += `    ${name.toUpperCase()}: '${name}',\n`;
    }
    result += '};';

    return result;
};

const update = () => {
    let content;
    content = createForTexture();
    content += '\n\n';
    content += createForSheets();
    content += '\n';

    fs.writeFile(path.join(srcFolder, 'AssetsNamesGenerated.js'), content, (err) => {
        if (err) {
            console.error(err);
        }
    });
};

fs.watch(texturesFolder, (eventType, filename) => {
    update();
});

fs.watch(sheetsFolder, (eventType, filename) => {
    update();
});

update();
