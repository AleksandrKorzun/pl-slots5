export async function generateOnelink() {
	const onelinkGenerator = new window.AF.OneLinkUrlGenerator({
		oneLinkURL: getOnelinkUrl(),
		pidKeysList: ['af_pid', 'utm_source'],
		pidStaticValue: 'landing_page',
		campaignKeysList: ['af_campaign', 'utm_campaign'],
		campaignStaticValue: 'campaign_error',
	})
	onelinkGenerator.setAdset('no_adset', 'adset')
	onelinkGenerator.setAd('original_url_ad', 'new_ad')

	const event_source_url =
		window.location.protocol +
		'//' +
		window.location.hostname +
		window.location.pathname

	const ttp = getCookie('_ttp');
	const ttclid = getTtclid();
	const userAgent = window.navigator.userAgent

	let ip;
	let ct;
	let country;

	try {
		const result = await fetch(
			'https://ipgeolocation.abstractapi.com/v1/?api_key=1c4acaa10922477bb9fb47f82a780a0b',
		)
		const res = await result.json()
		ip = res.ip_address
		ct = res.city?.toLowerCase()
		country = res.country_code?.toLowerCase()
	} catch (e) {
		console.log(e)
	}

	console.log('ttclid', ttclid)
	console.log('ttp', ttp)
	console.log('event_source_url', event_source_url)
	console.log('ip', ip)
	console.log('country', country)
	console.log('ct', ct)
	console.log('UserAgent', userAgent)
	console.log('External_id', window.id)

	const params = [
		['ttclid', ttclid],
		['ttp', ttp],
		['external_id', window.id],
		['fb_pixel', window.config.facebookPixel],
		['event_source_url', event_source_url],
		['client_user_agent', userAgent],
		['client_ip_address', ip],
		['ct', ct],
		['country', country],
	]

	const paramsString = params.filter(([key, value]) => !!value).map((pair) => pair.join('=')).join('&')
	const linkString = `data?${paramsString}`

	onelinkGenerator.setDeepLinkValue(
		'original_url_deeplinkvalue',
		encodeURIComponent(linkString),
	)
	onelinkGenerator.setCustomParameter(
		'value_for_af_dp',
		'af_dp',
		encodeURIComponent(linkString),
	)

	const linkUrl = onelinkGenerator.generateUrl()
	console.log('Link url', linkUrl)

	return linkUrl
}

const getTtclid = () => {
	const { search } = window.location;
	const params = new URLSearchParams(search);
	const ttclidFromParams = params.get('ttclid');
	const ttclidFromLocalStorage = localStorage.getItem('ttclid');

	return ttclidFromParams || ttclidFromLocalStorage
}

const getOnelinkUrl = () => {
	const { search } = window.location;
	const params = new URLSearchParams(search);
	const onelinkFromParams = params.get('onelink');
	const onelinkFromLocalStorage = localStorage.getItem('onelink');

	return onelinkFromParams || onelinkFromLocalStorage || window.config.oneLink
}

function getCookie(cname) {
	const name = cname + '='
	const decodedCookie = decodeURIComponent(document.cookie)
	const ca = decodedCookie.split(';')
	for (let i = 0; i < ca.length; i++) {
		let c = ca[i]
		while (c.charAt(0) === ' ') {
			c = c.substring(1)
		}
		if (c.indexOf(name) === 0) {
			return c.substring(name.length, c.length)
		}
	}
	return ''
}
